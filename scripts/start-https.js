/**
 * Script pour d√©marrer l'application en HTTPS avec un nom de domaine personnalis√©
 * 
 * Ce script v√©rifie les certificats SSL et d√©marre ensuite l'application avec Vite
 * en mode HTTPS. Il est con√ßu pour √™tre utilis√© avec la commande:
 * node scripts/start-https.js
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
const dotenv = require('dotenv');

// Charger les variables d'environnement
dotenv.config();

const domainName = 'dev.tcgbot.local';
const certFile = path.resolve(__dirname, '..', `${domainName}.pem`);
const keyFile = path.resolve(__dirname, '..', `${domainName}-key.pem`);

// V√©rifier si les certificats existent
if (!fs.existsSync(certFile) || !fs.existsSync(keyFile)) {
  console.log('‚ö†Ô∏è Certificats SSL non trouv√©s. G√©n√©ration des certificats...');
  
  try {
    // V√©rifier si mkcert est install√©
    execSync('mkcert -version', { stdio: 'ignore' });
    
    // G√©n√©rer les certificats
    console.log(`üîí G√©n√©ration des certificats pour ${domainName}...`);
    execSync(`mkcert ${domainName}`, { stdio: 'inherit' });
    
    console.log('‚úÖ Certificats g√©n√©r√©s avec succ√®s!');
  } catch (error) {
    console.error('‚ùå Erreur: mkcert n\'est pas install√© ou n\'a pas pu g√©n√©rer les certificats.');
    console.log('üìå Installez mkcert avec: npm install -g mkcert');
    process.exit(1);
  }
}

// V√©rifier si l'entr√©e DNS existe (sur Windows)
if (process.platform === 'win32') {
  try {
    const hostsContent = fs.readFileSync('C:\\Windows\\System32\\drivers\\etc\\hosts', 'utf-8');
    if (!hostsContent.includes(domainName)) {
      console.log(`‚ö†Ô∏è L'entr√©e pour ${domainName} n'est pas dans votre fichier hosts.`);
      console.log(`üìù Ajoutez cette ligne √† C:\\Windows\\System32\\drivers\\etc\\hosts:`);
      console.log(`127.0.0.1   ${domainName}`);
    }
  } catch (error) {
    console.warn('‚ö†Ô∏è Impossible de v√©rifier le fichier hosts. V√©rifiez-le manuellement.');
  }
}

// V√©rifier si le fichier .env contient l'URL
const envFile = path.resolve(__dirname, '..', '.env');
if (fs.existsSync(envFile)) {
  const envContent = fs.readFileSync(envFile, 'utf-8');
  if (!envContent.includes('VITE_SITE_URL')) {
    console.log('‚ö†Ô∏è VITE_SITE_URL non trouv√© dans .env, ajout automatique...');
    fs.appendFileSync(envFile, `\nVITE_SITE_URL=https://${domainName}:3000\n`);
  }
}

// D√©marrer l'application avec Vite
console.log('üöÄ D√©marrage de l\'application en HTTPS...');
try {
  execSync('npm run dev', { stdio: 'inherit' });
} catch (error) {
  console.error('‚ùå Erreur lors du d√©marrage de l\'application:', error);
  process.exit(1);
}
